'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PendingList = require('./utils/PendingList');

var _PendingList2 = _interopRequireDefault(_PendingList);

var _inViewport = require('./utils/inViewport');

var _inViewport2 = _interopRequireDefault(_inViewport);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable react/jsx-filename-extension */


var pendingList = new _PendingList2.default();

var LazyFastdom = function (_Component) {
  _inherits(LazyFastdom, _Component);

  function LazyFastdom(props) {
    _classCallCheck(this, LazyFastdom);

    var _this = _possibleConstructorReturn(this, (LazyFastdom.__proto__ || Object.getPrototypeOf(LazyFastdom)).call(this, props));

    _this.checkVisibility = _this.checkVisibility.bind(_this);
    _this.handleVisibility = _this.handleVisibility.bind(_this);

    _this.checkingVisibility = false;
    _this.visible = false;
    _this.mounted = false;
    _this.finishedAsyncMount = false;
    _this.state = { visible: false };
    return _this;
  }

  _createClass(LazyFastdom, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.mounted = true;
      pendingList.add(this);
      this.checkVisibility();
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(_nextProps, nextState) {
      return nextState.visible;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.mounted = false;
      if (!this.visible) pendingList.remove(this);
    }
  }, {
    key: 'getContainer',
    value: function getContainer() {
      return this.props.container || window;
    }
  }, {
    key: 'getOffset',
    value: function getOffset() {
      var _props = this.props,
          offset = _props.offset,
          offsetVertical = _props.offsetVertical,
          offsetHorizontal = _props.offsetHorizontal,
          offsetTop = _props.offsetTop,
          offsetBottom = _props.offsetBottom,
          offsetLeft = _props.offsetLeft,
          offsetRight = _props.offsetRight,
          threshold = _props.threshold;


      var offsetAll = threshold || offset;

      return {
        top: offsetTop || offsetVertical || offsetAll,
        bottom: offsetBottom || offsetVertical || offsetAll,
        left: offsetLeft || offsetHorizontal || offsetAll,
        right: offsetRight || offsetHorizontal || offsetAll
      };
    }

    // This method is called asynchronously from a throttle function
    // inside PendingList instance.

  }, {
    key: 'checkVisibility',
    value: function checkVisibility() {
      if (!this.node || !this.mounted || this.checkingVisibility) return;

      var offset = this.getOffset();
      var eventNode = this.getContainer();
      this.checkingVisibility = true;
      (0, _inViewport2.default)(this.node, eventNode, offset).then(this.handleVisibility);
    }
  }, {
    key: 'handleVisibility',
    value: function handleVisibility(visible) {
      var _this2 = this;

      this.checkingVisibility = false;

      if (!visible || this.visible) return;
      this.visible = true;
      pendingList.remove(this);

      this.setState({ visible: true }, function () {
        var onContentVisible = _this2.props.onContentVisible;

        if (onContentVisible) onContentVisible();
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          height = _props2.height,
          width = _props2.width,
          Element = _props2.elementType,
          placeholder = _props2.placeholder;
      var visible = this.state.visible;


      var elStyles = { height: height, width: width };
      var elClasses = 'LazyLoad' + (visible ? ' is-visible' : '') + (className ? ' ' + className : '');

      return _react2.default.createElement(
        Element,
        {
          className: elClasses,
          ref: function ref(node) {
            _this3.node = node;
          },
          style: elStyles
        },
        visible ? _react.Children.only(children) : placeholder
      );
    }
  }]);

  return LazyFastdom;
}(_react.Component);

exports.default = LazyFastdom;


LazyFastdom.propTypes = {
  children: _propTypes2.default.node.isRequired,
  className: _propTypes2.default.string,
  container: _propTypes2.default.shape({}),
  elementType: _propTypes2.default.string,
  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  offset: _propTypes2.default.number,
  offsetBottom: _propTypes2.default.number,
  offsetHorizontal: _propTypes2.default.number,
  offsetLeft: _propTypes2.default.number,
  offsetRight: _propTypes2.default.number,
  offsetTop: _propTypes2.default.number,
  offsetVertical: _propTypes2.default.number,
  threshold: _propTypes2.default.number,
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  onContentVisible: _propTypes2.default.func,
  placeholder: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object])
};

LazyFastdom.defaultProps = {
  className: null,
  container: null,
  height: null,
  width: null,
  threshold: 0,
  onContentVisible: null,
  elementType: 'div',
  offset: 0,
  offsetBottom: 0,
  offsetHorizontal: 0,
  offsetLeft: 0,
  offsetRight: 0,
  offsetTop: 0,
  offsetVertical: 0,
  placeholder: null
};