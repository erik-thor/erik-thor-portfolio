'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOverflowValues = exports.getWindowProps = exports.getElementBox = exports.getBoundingClientRect = undefined;

var _fastdom = require('fastdom/');

var _fastdom2 = _interopRequireDefault(_fastdom);

var _fastdomPromised = require('fastdom/extensions/fastdom-promised');

var _fastdomPromised2 = _interopRequireDefault(_fastdomPromised);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fastdomPromised = _fastdom2.default.extend(_fastdomPromised2.default);

var getBoundingClientRect = exports.getBoundingClientRect = function getBoundingClientRect(element) {
  return fastdomPromised.measure(function () {
    return element.getBoundingClientRect();
  });
};

var getElementBox = exports.getElementBox = function getElementBox(element) {
  return fastdomPromised.measure(function () {
    var offsetWidth = element.offsetWidth,
        offsetHeight = element.offsetHeight,
        offsetParent = element.offsetParent;

    return { offsetWidth: offsetWidth, offsetHeight: offsetHeight, offsetParent: offsetParent };
  });
};

var getWindowProps = exports.getWindowProps = function getWindowProps() {
  return fastdomPromised.measure(function () {
    var _window = window,
        pageXOffset = _window.pageXOffset,
        pageYOffset = _window.pageYOffset,
        innerWidth = _window.innerWidth,
        innerHeight = _window.innerHeight;

    return { pageXOffset: pageXOffset, pageYOffset: pageYOffset, innerWidth: innerWidth, innerHeight: innerHeight };
  });
};

var getOverflowValues = exports.getOverflowValues = function getOverflowValues(element) {
  return fastdomPromised.measure(function () {
    var _window$getComputedSt = window.getComputedStyle(element),
        overflow = _window$getComputedSt.overflow,
        overflowX = _window$getComputedSt.overflowX,
        overflowY = _window$getComputedSt.overflowY;

    return { overflow: overflow, overflowX: overflowX, overflowY: overflowY };
  });
};